{"ast":null,"code":"var _jsxFileName = \"/var/www/React/game-of-life/src/GOLGrid.js\";\nimport React from \"react\";\nimport LifeCell from \"./LifeCell\";\nimport './GOLGrid.css';\nconst NUM_ROWS = 10;\nconst NUM_COLS = 10;\n\nclass GOLGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      childStates: []\n    };\n    this.generateChildren = this.generateChildren.bind(this);\n    this.changeChildState = this.changeChildState.bind(this);\n    this.LifeGrid = this.LifeGrid.bind(this);\n\n    for (var i = 0; i < NUM_ROWS; i++) {\n      const row = [];\n\n      for (var j = 0; j < NUM_COLS; j++) {\n        row[j] = false;\n      }\n\n      this.state.childStates[i] = row;\n    }\n  }\n\n  LifeGrid(props) {\n    var columnString = \"\"; //  \tfor (var i = 0; i < NUM_COLS; i++) columnString += \"auto \";\n    //  \tconst divStyle = { \n    //  \t\t\"width\": \"50%\",\n    //  \t\t\"display\": \"grid\",\n    //  \t\t\"gridTemplateColumns\": columnString,\n    //  \t\t\"padding\": \"2px\",\n    //  \t\t\"marginLeft\": \"25%\"\n    //  \t};\n\n    return React.createElement(\"div\", {\n      id: \"MainGrid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(this.generateChildren, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n  generateChildren(props) {\n    let arr = [];\n\n    for (var i = 0; i < NUM_ROWS; i++) {\n      const row = [];\n\n      for (var j = 0; j < NUM_COLS; j++) {\n        if (!this.state.childStates[i][j]) console.log(\"dead\");\n        row[j] = React.createElement(LifeCell, {\n          alive: this.state.childStates[i][j],\n          row: i,\n          column: j,\n          report: this.changeChildState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }\n\n      arr[i] = row;\n    }\n\n    const retval = arr;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, retval);\n  }\n\n  render() {\n    return React.createElement(this.LifeGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GOLGrid;","map":{"version":3,"sources":["/var/www/React/game-of-life/src/GOLGrid.js"],"names":["React","LifeCell","NUM_ROWS","NUM_COLS","GOLGrid","Component","constructor","props","state","childStates","generateChildren","bind","changeChildState","LifeGrid","i","row","j","columnString","arr","console","log","retval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,eAAP;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AAGA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE;AADD,KAAb;AAIA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,QAAL,GAAwB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAxB;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAApB,EAA8BY,CAAC,EAA/B,EAAmC;AACjC,YAAMC,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,QAApB,EAA8Ba,CAAC,EAA/B,EAAmC;AACjCD,QAAAA,GAAG,CAACC,CAAD,CAAH,GAAS,KAAT;AACD;;AACD,WAAKR,KAAL,CAAWC,WAAX,CAAuBK,CAAvB,IAA4BC,GAA5B;AACD;AACF;;AAEDF,EAAAA,QAAQ,CAACN,KAAD,EAAQ;AACf,QAAIU,YAAY,GAAG,EAAnB,CADe,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,WACC;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,yBAAM,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKA;;AAEDP,EAAAA,gBAAgB,CAACH,KAAD,EAAQ;AACvB,QAAIW,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAApB,EAA8BY,CAAC,EAA/B,EAAmC;AAClC,YAAMC,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,QAApB,EAA8Ba,CAAC,EAA/B,EAAmC;AAClC,YAAI,CAAC,KAAKR,KAAL,CAAWC,WAAX,CAAuBK,CAAvB,EAA0BE,CAA1B,CAAL,EACCG,OAAO,CAACC,GAAR,CAAY,MAAZ;AACDL,QAAAA,GAAG,CAACC,CAAD,CAAH,GAAU,oBAAC,QAAD;AACP,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,WAAX,CAAuBK,CAAvB,EAA0BE,CAA1B,CADA;AAEP,UAAA,GAAG,EAAEF,CAFE;AAGP,UAAA,MAAM,EAAEE,CAHD;AAIP,UAAA,MAAM,EAAE,KAAKJ,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAMA;;AACDM,MAAAA,GAAG,CAACJ,CAAD,CAAH,GAASC,GAAT;AACA;;AACD,UAAMM,MAAM,GAAGH,GAAf;AACA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJG,MADI,CAAR;AAGA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC,yBAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AA/DmC;;AAmEtC,eAAelB,OAAf","sourcesContent":["import React from \"react\";\nimport LifeCell from \"./LifeCell\";\nimport './GOLGrid.css';\n\nconst NUM_ROWS = 10;\nconst NUM_COLS = 10;\n\n\nclass GOLGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tchildStates: []\n    };\n\n    this.generateChildren = this.generateChildren.bind(this);\n    this.changeChildState = this.changeChildState.bind(this);\n    this.LifeGrid         = this.LifeGrid.bind(this);\n\n    for (var i = 0; i < NUM_ROWS; i++) {\n      const row = [];\n      for (var j = 0; j < NUM_COLS; j++) {\n        row[j] = false;\n      }\n      this.state.childStates[i] = row;\n    }\n  }\n\n  LifeGrid(props) {\n  \tvar columnString = \"\";\n//  \tfor (var i = 0; i < NUM_COLS; i++) columnString += \"auto \";\n//  \tconst divStyle = { \n//  \t\t\"width\": \"50%\",\n//  \t\t\"display\": \"grid\",\n//  \t\t\"gridTemplateColumns\": columnString,\n//  \t\t\"padding\": \"2px\",\n//  \t\t\"marginLeft\": \"25%\"\n//  \t};\n  \treturn (\n  \t\t<div id=\"MainGrid\">\n  \t\t\t<this.generateChildren />\n  \t\t</div>\n  \t);\n  }\n\n  generateChildren(props) {\n  \tlet arr = [];\n  \tfor (var i = 0; i < NUM_ROWS; i++) {\n  \t\tconst row = [];\n  \t\tfor (var j = 0; j < NUM_COLS; j++) {\n  \t\t\tif (!this.state.childStates[i][j])\n  \t\t\t\tconsole.log(\"dead\");\n  \t\t\trow[j] = (<LifeCell \n  \t\t\t\t\t\talive={this.state.childStates[i][j]} \n  \t\t\t\t\t\trow={i} \n  \t\t\t\t\t\tcolumn={j} \n  \t\t\t\t\t\treport={this.changeChildState} \n  \t\t\t\t\t />);\n  \t\t}\n  \t\tarr[i] = row;\n  \t}\n  \tconst retval = arr;\n  \treturn (<div>\n  \t\t\t\t{retval}\n  \t\t\t\t</div>);\n  }\n\n  render() {\n  \treturn (\n  \t\t<this.LifeGrid />\n  \t);\n  }\n\n}\n\nexport default GOLGrid;"]},"metadata":{},"sourceType":"module"}