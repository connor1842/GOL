{"ast":null,"code":"var _jsxFileName = \"/var/www/React/game-of-life/src/GOLGrid.js\";\nimport React from \"react\";\nimport \"./LifeCell\";\nconst NUM_ROWS = 30;\nconst NUM_COLS = 20;\n\nclass GOLGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      children: []\n    };\n    generateChildren();\n  }\n\n  generateChildren() {\n    for (var i = 0; i < NUM_ROWS; i++) {\n      const row = [];\n\n      for (var j = 0; j < NUM_COLS; j++) {\n        row[j] = React.createElement(LifeCell, {\n          row: i,\n          column: j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n    }\n  }\n\n  addChild(item) {\n    const newChildren = [...this.state.children, item];\n    this.setState({\n      children: newChildren\n    });\n  }\n\n  LifeGrid(props) {}\n\n  render() {\n    return React.createElement(LifeGrid, {\n      grid: this.state.children,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GOLGrid;","map":{"version":3,"sources":["/var/www/React/game-of-life/src/GOLGrid.js"],"names":["React","NUM_ROWS","NUM_COLS","GOLGrid","Component","constructor","props","state","children","generateChildren","i","row","j","addChild","item","newChildren","setState","LifeGrid","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AAGA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE;AADE,KAAb;AAGAC,IAAAA,gBAAgB;AACjB;;AAEDA,EAAAA,gBAAgB,GAAG;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,QAApB,EAA8BS,CAAC,EAA/B,EAAmC;AAClC,YAAMC,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,QAApB,EAA8BU,CAAC,EAA/B,EAAmC;AAClCD,QAAAA,GAAG,CAACC,CAAD,CAAH,GAAU,oBAAE,QAAF;AAAW,UAAA,GAAG,EAAEF,CAAhB;AAAmB,UAAA,MAAM,EAAEE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACA;AACD;AACD;;AAEDC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACd,UAAMC,WAAW,GAAG,CAAC,GAAG,KAAKR,KAAL,CAAWC,QAAf,EAAyBM,IAAzB,CAApB;AACA,SAAKE,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO;AAAZ,KAAd;AACA;;AAEDE,EAAAA,QAAQ,CAACX,KAAD,EAAQ,CAEf;;AAEDY,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AA/BmC;;AAmCtC,eAAeL,OAAf","sourcesContent":["import React from \"react\";\nimport \"./LifeCell\";\n\nconst NUM_ROWS = 30;\nconst NUM_COLS = 20;\n\n\nclass GOLGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tchildren: []\n    };\n    generateChildren();\n  }\n\n  generateChildren() {\n  \tfor (var i = 0; i < NUM_ROWS; i++) {\n  \t\tconst row = [];\n  \t\tfor (var j = 0; j < NUM_COLS; j++) {\n  \t\t\trow[j] = (< LifeCell row={i} column={j} />);\n  \t\t}\n  \t}\n  }\n\n  addChild(item) {\n  \tconst newChildren = [...this.state.children, item];\n  \tthis.setState({ children: newChildren });\n  }\n\n  LifeGrid(props) {\n\n  }\n\n  render() {\n  \treturn (\n  \t\t<LifeGrid grid={this.state.children} />\n  \t);\n  }\n\n}\n\nexport default GOLGrid"]},"metadata":{},"sourceType":"module"}